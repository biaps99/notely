name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ci-pipeline-${{github.ref}}
  cancel-in-progress: true

jobs:
  backend-lint:
    name: Run Backend Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: backend/pyproject.toml

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
            version: latest

      - name: Install lint backend dependencies
        run: |
            cd backend
            uv sync --frozen --no-install-project --group lint

      - name: Run backend format check
        run: |
            cd backend
            uv run ruff format --diff .
            uv run ruff check .

  backend-tests:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    needs: backend-lint
    continue-on-error: false

    steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version-file: backend/pyproject.toml

        - name: Install UV
          uses: astral-sh/setup-uv@v5
          with:
            version: latest

        - name: Install test dependencies
          run: |
            cd backend
            uv sync --frozen --no-install-project --group test --group prod
        
        - name: Start mongodb
          uses: supercharge/mongodb-github-action@1.12.0
          with:
            mongodb-replica-set: rs0

        - name: Run backend tests with coverage
          run: | 
            cd backend
            export PYTHONPATH=$(pwd)
            export ENVIRONMENT=testing
            uv run pytest --cov=backend --cov-report=term-missing --maxfail=1 -vv
        
  frontend-lint:
    name: Run Frontend Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install lint frontend dependencies
        run: |
            cd frontend
            yarn install --production=false --frozen-lockfile

      - name: Run frontend format check
        run: |
            cd frontend
            yarn format --check

  frontend-tests:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    needs: frontend-lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install test frontend dependencies
        run: |
            cd frontend
            yarn install --frozen-lockfile

      - name: Run frontend tests with coverage
        run: |
            cd frontend 
            yarn test --coverage --watchAll=false
